//
// auto-generated by op2.py
//

void updateVolumesForElem_omp4_kernel(
  double *data0,
  int dat0size,
  double *data1,
  int dat1size,
  int count,
  int num_teams,
  int nthread){

  #pragma omp target teams num_teams(num_teams) thread_limit(nthread) map(to:data0[0:dat0size],data1[0:dat1size]) \
    map(to: m_v_cut_ompkernel)
  #pragma omp distribute parallel for schedule(static,1)
  for ( int n_op=0; n_op<count; n_op++ ){
    //variable mapping
    const double *vnew = &data0[1*n_op];
    double *v = &data1[1*n_op];

    //inline function
    
      double tmpV = vnew[0] ;

      if ( fabs(tmpV - double(1.0)) < m_v_cut_ompkernel )
      tmpV = double(1.0) ;

      v[0] = tmpV ;
    //end inline func
  }

}
