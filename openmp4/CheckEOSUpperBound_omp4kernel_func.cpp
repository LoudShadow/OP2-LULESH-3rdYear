//
// auto-generated by op2.py
//

void CheckEOSUpperBound_omp4_kernel(
  double *data0,
  int dat0size,
  double *data1,
  int dat1size,
  double *data2,
  int dat2size,
  double *data3,
  int dat3size,
  int count,
  int num_teams,
  int nthread){

  #pragma omp target teams num_teams(num_teams) thread_limit(nthread) map(to:data0[0:dat0size],data1[0:dat1size],data2[0:dat2size],data3[0:dat3size]) \
    map(to: m_eosvmax_ompkernel)
  #pragma omp distribute parallel for schedule(static,1)
  for ( int n_op=0; n_op<count; n_op++ ){
    //variable mapping
    const double *vnewc = &data0[1*n_op];
    double *compHalfStep = &data1[1*n_op];
    double *compression = &data2[1*n_op];
    double* p_old = &data3[1*n_op];

    //inline function
    
      if (vnewc[0] >= m_eosvmax_ompkernel) {
          p_old[0]        = double(0.) ;
          compression[0]  = double(0.) ;
          compHalfStep[0] = double(0.) ;
      }
    //end inline func
  }

}
